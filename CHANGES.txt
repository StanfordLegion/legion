This file lists the major changes as they appear in the stable branch.  No
attempt is made to keep this list accurate for the master branch.

Version 17.05.0 (May 26, 2017
  * Build system
    - Finally removed long-obsolete SHARED_LOWLEVEL flag
  * Legion
    - Added C++14 [[deprecated]] attribute to existing deprecated APIs.
        All examples should all compile without deprecation warnings
    - Added Legion executor that enables support for interoperating
        with Agency inside of Legion tasks
  * Realm
    - Switched to new DMA engine
    - Initial support for OpenMP "processors". Compile with USE_OPENMP
  * Regent
    - Added support running normal tasks on I/O processors
    - Added support for OpenMP code generation via __demand(__openmp)
  * C API
    - Removed the following deprecated types:
          legion_task_result_t
            (obviated by the new task preamble/postamble)
    - Removed the following deprecated APIs:
          legion_physical_region_get_accessor_generic
          legion_physical_region_get_accessor_array
            (use legion_physical_region_get_field_accessor_* instead)
          legion_runtime_set_registration_callback
            (use legion_runtime_add_registration_callback instead)
          legion_runtime_register_task_void
          legion_runtime_register_task
          legion_runtime_register_task_uint32
          legion_runtime_register_task_uint64
            (use legion_runtime_preregister_task_variant_* instead)
          legion_future_from_buffer
          legion_future_from_uint32
          legion_future_from_uint64
          legion_future_from_bytes
            (use legion_future_from_untyped_pointer instead)
          legion_future_get_result
          legion_future_get_result_uint32
          legion_future_get_result_uint64
          legion_future_get_result_bytes
            (use legion_future_get_untyped_pointer instead)
          legion_future_get_result_size
            (use legion_future_get_untyped_size instead)
          legion_future_map_get_result
            (use legion_future_map_get_future instead)

Version 17.02.0 (February 14, 2017)
  * General
    - Bumped copyright dates
  * Legion
    - Merged versioning branch with support for a higher performance
        version numbering computation
    - More efficient analysis for index space task launches
    - Updated custom projection function API
    - Added support for speculative mapping of predicated operations
    - Added index space copy and fill operations
  * Legion Prof
    - Added a stats view of processors grouped by node and processor type
    - Added ability to collapse/expand each processor/channel/memory in
        a timeline. To collapse/expand a row, click the name. To 
        collapse/expand the children of a row, click on the triangle 
        next to the name.
    - Grouped the processor timelines to be child elements under the stats
        views
    - Added on-demand loading of each processor/stats in a timeline.
        Elements are only loaded when you expand them, saving bandwidth
  * CMake
    - Switched to separate flags for each of the Legion extras directories:
          -DLegion_BUILD_APPS (for ./apps)
          -DLegion_BUILD_EXAMPLES (for ./examples)
          -DLegion_BUILD_TUTORIAL (for ./tutorial)
          -DLegion_BUILD_TESTS (for ./test)

Version 16.10.0 (October 7, 2016)
  * Realm
    - HDF5 support: moved to Realm module, added DMA channels
    - PAPI support: basic profiling (instructions, caches, branches) added
  * Build flow
    - Fixes to support compilation in 32-bit mode
    - Numerous improvements to CMake build
  * Regent
    - Improvements to vectorization of structured codes
  * Apps
    - Removed bit-rotted applications - some have been replaced by examples
        or Regent applications
  * Tests
    - New test infrastructure and top-level test script `test.py`

Version 16.08.0 (August 30, 2016)
  * Realm
    - Critical-enough ("error" and "fatal" by default, controlled with
        -errlevel) logging messages are mirrored to stderr when -logfile is
        used
    - Command-line options for logging (-error and new -errlevel) support
        English names of logging levels (spew, debug, info, print,
        warn/warning, error, fatal, none) as well as integers
  * Legion
    - Rewrite of the Legion shutdown algorithm for improved scalability
      and avoiding O(N^2) behavior in the number of nodes
  * Regent
    - Installer now prompts for RDIR installation
  * Tools
    - Important Legion Spy performance improvements involving transitive
        reductions

Version 16.06.0 (June 15, 2016)
  * Legion
    - New mapper API:
        use ShimMapper for limited backwards compatibility
    - New task variant registration API
        supports specifying layout constraints for region requirements
        old interface is still available but deprecated
    - Several large bug fixes for internal version numbering computation
  * C API
    - The context parameter for many API calls has been removed
  * Tools
    - Total re-write of Legion Spy

Version 16.05.0 (May 2, 2016)
  * Lots of stuff - we weren't itemizing things before this point.
