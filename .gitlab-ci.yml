###
### Variables
###

# Global variables (will be set in every job):
variables:
  WARN_AS_ERROR: "1"
  # MAKEFLAGS: "-s"
  REALM_BACKTRACE: "1"
  REALM_SYNTHETIC_CORE_MAP: "" # Disable Realm thread pinning.

# Local variables (included on a case-by-case basis in each job):
.gcc48: &gcc48
  CXX: "g++-4.8"
.gcc49: &gcc49
  CXX: "g++-4.9"
.gcc5: &gcc5
  CXX: "g++-5"
.gcc6: &gcc6
  CXX: "g++-6"

.clang35: &clang35
  CXX: "clang++-3.5"
.clang38: &clang38
  CXX: "clang++-3.8"

.terra35: &terra35
  LLVM_CONFIG: "llvm-config-3.5"
  TERRA_DIR: "/usr/local/terra35"
.terra38: &terra38
  LLVM_CONFIG: "llvm-config-3.8"
  TERRA_DIR: "/usr/local/terra38"

.debug: &debug
  DEBUG: "1"
.release: &release
  DEBUG: "0"

.cxx98_normal: &cxx98_normal
  CC_FLAGS: "-std=c++98"
.cxx98_checks: &cxx98_checks
  CC_FLAGS: "-std=c++98 -DPRIVILEGE_CHECKS -DBOUNDS_CHECKS"
.cxx98_spy: &cxx98_spy
  CC_FLAGS: "-std=c++98 -DLEGION_SPY"
  USE_SPY: "1"
.cxx11_normal: &cxx11_normal
  CC_FLAGS: "-std=c++11"
.cxx14_normal: &cxx14_normal
  CC_FLAGS: "-std=c++14"
.cxx14_checks: &cxx14_checks
  CC_FLAGS: "-std=c++14 -DPRIVILEGE_CHECKS -DBOUNDS_CHECKS"
.cxx98_32bit_normal: &cxx98_32bit_normal
  CC_FLAGS: "-std=c++98 -m32"
  LD_FLAGS: "-m32"
  MARCH: "i686"

.openmp: &openmp
  USE_OPENMP: "1"
.hdf5: &hdf5
  USE_HDF: "1"
.gasnet: &gasnet
  USE_GASNET: "1"
.cmake: &cmake
  USE_CMAKE: "1"

.legion: &legion
  TEST_REGENT: "0"

.regent: &regent
  TEST_LEGION_CXX: "0"
  TEST_REALM: "0"
  TEST_FUZZER: "0"

###
### Setup
###

# These commands will run before each job.
before_script:
  - uname -a
  - |
    if [[ "$(uname)" = "Linux" ]]; then
      export THREADS=$(nproc --all)
    elif [[ "$(uname)" = "Darwin" ]]; then
      export THREADS=$(sysctl -n hw.ncpu)
    else
      echo "Unknown platform. Setting THREADS to 1."
      export THREADS=1
    fi
  # - |
  #   if [[ "$(uname)" = "Darwin" ]]; then
  #     brew update
  #     brew install pypy homebrew/versions/llvm35
  #   fi
  - |
    if [[ "$USE_GASNET" -eq 1 ]]; then
      export CONDUIT=mpi
      export GASNET_ROOT="$PWD/gasnet/release"
      # OpenMPI:
      # export LAUNCHER="mpirun -n 2 -x TERRA_PATH -x INCLUDE_PATH -x LD_LIBRARY_PATH -x LG_RT_DIR -x USE_RDIR"
      # MPICH:
      export LAUNCHER="mpirun -n 2"
      unset WARN_AS_ERROR
      git clone https://github.com/StanfordLegion/gasnet.git gasnet
      pushd gasnet
      make -j$THREADS
      popd
    fi

###
### Tags
###

.linux: &linux
  tags:
    - linux
.macos: &macos
  tags:
    - macos

# For compute-heavy tests:
.linux_compute: &linux_compute
  tags:
    - linux
    - compute

# For performance tests, always use specific machines:
.linux_n0004: &linux_n0004
  tags:
    - linux
    - n0004

###
### Docker Image
###

# Each job will run in a fresh container with this image.
.image: &image
  image: stanfordlegion/gitlab-ci # i.e. https://hub.docker.com/r/stanfordlegion/gitlab-ci/

###
### Tests
###

# Each job will run this set of tests.
.tests: &tests
  script:
    - ./test.py

# Some additional tests are only run on certain configurations.
.external_tests: &external_tests
  script:
    - |
      if [[ -n $GITLAB_DEPLOY_KEY ]]; then
        eval $(ssh-agent -s)
        ssh-add <(echo "$GITLAB_DEPLOY_KEY")
        mkdir -p ~/.ssh
        [[ -f /.dockerenv ]] && echo -e "Host *\n\tStrictHostKeyChecking no\n\n" > ~/.ssh/config
      fi
    - ./test.py --test=external --test=private

# For performance tests, run these commands:
.perf_tests: &perf_tests
  script:
    - ./test.py --test=perf

###
### Jobs
###

# Each item below defines a job.

# There are two tiers of tests.
#  1. Full test suite (small number of compilers).
#  2. Minimal test suite (other compilers).

# Run the full test suite on GCC 4.9 and Clang 3.5.

# Linux with GCC 4.9
gcc49_cxx98_release_legion:
  <<: [*linux, *image, *tests]
  variables:
    <<: [*gcc49, *terra38, *release, *cxx98_normal, *legion]
gcc49_cxx98_release_regent:
  <<: [*linux, *image, *tests]
  variables:
    <<: [*gcc49, *terra38, *release, *cxx98_normal, *regent]
gcc49_cxx98_debug_checks_legion:
  <<: [*linux, *image, *tests]
  variables:
    <<: [*gcc49, *terra38, *debug, *cxx98_checks, *legion]
gcc49_cxx98_debug_spy_legion:
  <<: [*linux, *image, *tests]
  variables:
    <<: [*gcc49, *terra38, *debug, *cxx98_spy, *legion]
gcc49_cxx98_debug_spy_regent:
  <<: [*linux, *image, *tests]
  variables:
    <<: [*gcc49, *terra38, *debug, *cxx98_spy, *regent]
gcc49_cxx11_release_legion:
  <<: [*linux, *image, *tests]
  variables:
    <<: [*gcc49, *terra38, *release, *cxx11_normal, *legion]
gcc49_cxx98_debug_checks_openmp_legion:
  <<: [*linux, *image, *tests]
  variables:
    <<: [*gcc49, *terra38, *debug, *cxx98_checks, *openmp, *legion]
gcc49_cxx98_debug_checks_openmp_regent:
  <<: [*linux, *image, *tests]
  variables:
    <<: [*gcc49, *terra38, *debug, *cxx98_checks, *openmp, *regent]
gcc49_cxx98_debug_checks_hdf5_cmake_legion:
  <<: [*linux, *image, *tests]
  variables:
    <<: [*gcc49, *terra38, *debug, *cxx98_checks, *hdf5, *cmake, *legion]
gcc49_cxx98_debug_checks_hdf5_regent:
  <<: [*linux, *image, *tests]
  variables:
    <<: [*gcc49, *terra38, *debug, *cxx98_checks, *hdf5, *regent]
gcc49_cxx98_debug_checks_gasnet_cmake_legion:
  <<: [*linux_compute, *image, *tests]
  variables:
    <<: [*gcc49, *terra38, *debug, *cxx98_checks, *gasnet, *cmake, *legion]
gcc49_cxx98_debug_checks_gasnet_regent:
  <<: [*linux_compute, *image, *tests]
  variables:
    <<: [*gcc49, *terra38, *debug, *cxx98_checks, *gasnet, *regent]
gcc49_cxx98_debug_spy_gasnet_regent:
  <<: [*linux_compute, *image, *tests]
  variables:
    <<: [*gcc49, *terra38, *debug, *cxx98_spy, *gasnet, *regent]
  allow_failure: true # FIXME: some multi-node spy tests are currently failing
gcc49_cxx98_32bit_debug_legion:
  <<: [*linux, *image, *tests]
  variables:
    <<: [*gcc49, *terra38, *debug, *cxx98_32bit_normal, *legion]
gcc49_cxx98_debug_checks_external:
  <<: [*linux_compute, *image, *external_tests]
  variables:
    <<: [*gcc49, *terra38, *debug, *cxx98_checks]

# Linux with Clang 3.8
clang38_cxx98_release_legion:
  <<: [*linux, *image, *tests]
  variables:
    <<: [*clang38, *terra38, *release, *cxx98_normal, *legion]
clang38_cxx98_release_regent:
  <<: [*linux, *image, *tests]
  variables:
    <<: [*clang38, *terra38, *release, *cxx98_normal, *regent]
clang38_cxx98_debug_checks_legion:
  <<: [*linux, *image, *tests]
  variables:
    <<: [*clang38, *terra38, *debug, *cxx98_checks, *legion]
clang38_cxx98_debug_spy_legion:
  <<: [*linux, *image, *tests]
  variables:
    <<: [*clang38, *terra38, *debug, *cxx98_spy, *legion]
clang38_cxx98_debug_spy_regent:
  <<: [*linux, *image, *tests]
  variables:
    <<: [*clang38, *terra38, *debug, *cxx98_spy, *regent]
clang38_cxx11_release_legion:
  <<: [*linux, *image, *tests]
  variables:
    <<: [*clang38, *terra38, *release, *cxx11_normal, *legion]
clang38_cxx98_debug_checks_openmp_legion:
  <<: [*linux, *image, *tests]
  variables:
    <<: [*clang38, *terra38, *debug, *cxx98_checks, *openmp, *legion]
clang38_cxx98_debug_checks_openmp_regent:
  <<: [*linux, *image, *tests]
  variables:
    <<: [*clang38, *terra38, *debug, *cxx98_checks, *openmp, *regent]
clang38_cxx98_debug_checks_hdf5_cmake_legion:
  <<: [*linux, *image, *tests]
  variables:
    <<: [*clang38, *terra38, *debug, *cxx98_checks, *hdf5, *cmake, *legion]
clang38_cxx98_debug_checks_hdf5_regent:
  <<: [*linux, *image, *tests]
  variables:
    <<: [*clang38, *terra38, *debug, *cxx98_checks, *hdf5, *regent]
clang38_cxx98_debug_checks_gasnet_cmake_legion:
  <<: [*linux_compute, *image, *tests]
  variables:
    <<: [*clang38, *terra38, *debug, *cxx98_checks, *gasnet, *cmake, *legion]
clang38_cxx98_debug_checks_gasnet_regent:
  <<: [*linux_compute, *image, *tests]
  variables:
    <<: [*clang38, *terra38, *debug, *cxx98_checks, *gasnet, *regent]
# clang38_cxx98_debug_spy_gasnet_regent:
#   <<: [*linux_compute, *image, *tests]
#   variables:
#     <<: [*clang38, *terra38, *debug, *cxx98_spy, *gasnet, *regent]
clang38_cxx98_32bit_debug_legion:
  <<: [*linux, *image, *tests]
  variables:
    <<: [*clang38, *terra38, *debug, *cxx98_32bit_normal, *legion]
clang38_cxx98_debug_checks_external:
  <<: [*linux_compute, *image, *external_tests]
  variables:
    <<: [*clang38, *terra38, *debug, *cxx98_checks]

# # macOS with Clang 3.5
# macos_clang38_cxx98_debug_checks:
#   <<: [*macos, *tests]
#   variables:
#     <<: [*clang38, *debug, *cxx98_checks]

# Run minimal tests on other compilers.

# Linux with GCC 4.8, 5, 6
gcc48_cxx98_debug_checks_legion:
  <<: [*linux, *image, *tests]
  variables:
    <<: [*gcc48, *terra38, *debug, *cxx98_checks, *legion]
gcc48_cxx98_debug_regent:
  <<: [*linux, *image, *tests]
  variables:
    <<: [*gcc48, *terra38, *debug, *cxx98_normal, *regent]
gcc5_cxx98_debug_checks_legion:
  <<: [*linux, *image, *tests]
  variables:
    <<: [*gcc5, *terra38, *debug, *cxx98_checks, *legion]
gcc5_cxx98_debug_normal_regent:
  <<: [*linux, *image, *tests]
  variables:
    <<: [*gcc5, *terra38, *debug, *cxx98_normal, *regent]
gcc6_cxx98_debug_checks_legion:
  <<: [*linux, *image, *tests]
  variables:
    <<: [*gcc6, *terra38, *debug, *cxx98_checks, *legion]
gcc6_cxx98_debug_regent:
  <<: [*linux, *image, *tests]
  variables:
    <<: [*gcc6, *terra38, *debug, *cxx98_normal, *regent]
gcc6_cxx14_debug_checks_legion:
  <<: [*linux, *image, *tests]
  variables:
    <<: [*gcc6, *terra38, *debug, *cxx14_checks, *legion]
gcc6_cxx14_debug_regent:
  <<: [*linux, *image, *tests]
  variables:
    <<: [*gcc6, *terra38, *debug, *cxx14_normal, *regent]

# Linux with Clang 3.5
clang35_cxx98_debug_checks_legion:
  <<: [*linux, *image, *tests]
  variables:
    <<: [*clang35, *terra35, *debug, *cxx98_checks, *legion]
# FIXME: Breaks on attempting to split vector-op
# clang35_cxx98_debug_checks_regent:
#   <<: [*linux, *image, *tests]
#   variables:
#     <<: [*clang35, *terra35, *debug, *cxx98_checks, *regent]

# Performance tests:
n0004_gcc49_cxx98_release_perf:
  <<: [*linux_n0004, *image, *perf_tests]
  variables:
    <<: [*gcc49, *terra38, *release, *cxx98_normal]
